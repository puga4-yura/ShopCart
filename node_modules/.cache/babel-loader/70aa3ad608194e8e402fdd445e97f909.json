{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\ShopCartReact\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport { data } from \"./store/store.jsx\";\nimport Product from \"./components/productcart/Product\";\nimport ResultCart from \"./components/ChooseProduct/ChooseProduct\";\nimport logo from \"./logo.svg\";\nimport './App.css'; // сделать отдельные функции для пересчета\n// вынести в отдельный компонет (выбор товара)\n// при удалении дтовара что бы пересчитыывалась карта\n// название товара что бы выводилось 2 СЛОВА ТОЛЬКО\n// пагинация\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.removeElement = el => {\n      const newList = this.state.qty.filter(function (item) {\n        return item.id !== el.id;\n      });\n      const newListAfterDelete = this.state.productToWillBuyCount.filter(function (item) {\n        return item.id !== el.id;\n      });\n      this.setState({\n        productToWillBuyCount: newListAfterDelete\n      });\n      this.setState({\n        qty: newList\n      });\n    };\n\n    this.productToWillBuyCount = el => {\n      const updateElement = [...this.state.productToWillBuyCount];\n      updateElement.push(el);\n      console.log(updateElement);\n      const ListNameProd = updateElement.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, item.title), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"\\u0426\\u0435\\u043D\\u0430: \", item.price));\n        console.log(item.title);\n      });\n      const ListPriceProd = updateElement.map(function (item) {\n        return Number(item.price);\n      });\n      console.log(ListPriceProd);\n      var allPrice = ListPriceProd.reduce(function (sum, current) {\n        return sum + current;\n      }, 0);\n      console.log(allPrice);\n      this.setState({\n        productToWillBuyCount: updateElement,\n        productToWillBuyListName: ListNameProd,\n        productToWillPrice: allPrice\n      });\n    };\n\n    this.removeElementFromBuy = el => {\n      const updataNewList = this.state.productToWillBuyCount.filter(function (item) {\n        return item.id !== el.id;\n      });\n      const ListNameProd = updataNewList.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, item.title), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, item.price));\n      });\n      const ListPriceProd = updataNewList.map(function (item) {\n        return Number(item.price);\n      });\n      console.log(ListPriceProd);\n      const allPrice = ListPriceProd.reduce(function (sum, current) {\n        return sum + current;\n      }, 0);\n      this.setState({\n        productToWillBuyCount: updataNewList,\n        productToWillBuyListName: ListNameProd,\n        productToWillPrice: allPrice\n      });\n    };\n\n    this.state = {\n      qty: data,\n      productToWillBuyCount: [],\n      productToWillBuyListName: [],\n      productToWillPrice: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"d\", React.createElement(\"div\", {\n      className: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.qty.map(el => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Product, {\n        key: el.id,\n        el: el,\n        removeElement: this.removeElement,\n        productToWillBuyCount: this.productToWillBuyCount,\n        removeElementFromBuy: this.removeElementFromBuy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    })), \"/* \", React.createElement(\"div\", {\n      className: \"result-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"result-container-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Will Buy: \", this.state.productToWillBuyCount.length, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.productToWillBuyListName)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"All Price: \", this.state.productToWillPrice))), \"*/\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(ResultCart, {\n      productToWillBuyCount: this.productToWillBuyCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\Project\\ShopCartReact\\src\\App.jsx"],"names":["React","data","Product","ResultCart","App","Component","constructor","removeElement","el","newList","state","qty","filter","item","id","newListAfterDelete","productToWillBuyCount","setState","updateElement","push","console","log","ListNameProd","map","title","price","ListPriceProd","Number","allPrice","reduce","sum","current","productToWillBuyListName","productToWillPrice","removeElementFromBuy","updataNewList","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {data} from \"./store/store.jsx\"\r\nimport Product from \"./components/productcart/Product\"\r\nimport ResultCart from \"./components/ChooseProduct/ChooseProduct\"\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\n// сделать отдельные функции для пересчета\r\n// вынести в отдельный компонет (выбор товара)\r\n// при удалении дтовара что бы пересчитыывалась карта\r\n// название товара что бы выводилось 2 СЛОВА ТОЛЬКО\r\n// пагинация\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            qty: data,\r\n            productToWillBuyCount: [],\r\n            productToWillBuyListName: [],\r\n            productToWillPrice: []\r\n        };\r\n    };\r\n\r\n    removeElement = el => {\r\n        const newList = this.state.qty.filter(function (item) {\r\n            return item.id !== el.id;\r\n\r\n        });\r\n        const newListAfterDelete = this.state.productToWillBuyCount.filter(function (item) {\r\n            return item.id !== el.id\r\n        })\r\n\r\n        this.setState({\r\n            productToWillBuyCount: newListAfterDelete\r\n        });\r\n\r\n        this.setState({\r\n            qty: newList\r\n        });\r\n    };\r\n\r\n    productToWillBuyCount = el => {\r\n        const updateElement = [... this.state.productToWillBuyCount];\r\n        updateElement.push(el)\r\n        console.log(updateElement)\r\n        const ListNameProd  = updateElement.map(function (item) {\r\n            return (\r\n              <div>\r\n                  <div>{item.title}</div>\r\n                  <div>Цена: {item.price}</div>\r\n              </div>\r\n              )\r\n            console.log(item.title)\r\n        })\r\n\r\n        const ListPriceProd  = updateElement.map(function (item) {\r\n            return Number(item.price)\r\n        })\r\n\r\n        console.log(ListPriceProd)\r\n        var allPrice = ListPriceProd.reduce(function(sum, current) {\r\n            return sum + current;\r\n        }, 0);\r\n\r\n        console.log(allPrice)\r\n        this.setState({\r\n            productToWillBuyCount: updateElement,\r\n            productToWillBuyListName:  ListNameProd,\r\n            productToWillPrice: allPrice\r\n        })\r\n    };\r\n\r\n\r\n    removeElementFromBuy = el => {\r\n        const updataNewList = this.state.productToWillBuyCount.filter(function (item) {\r\n            return item.id !== el.id;\r\n        });\r\n\r\n        const ListNameProd  = updataNewList.map(function (item) {\r\n            return (\r\n              <div>\r\n                  <div>{item.title}</div>\r\n                  <div>{item.price}</div>\r\n              </div>\r\n            )\r\n        })\r\n\r\n\r\n        const ListPriceProd  = updataNewList.map(function (item) {\r\n            return Number(item.price)\r\n        })\r\n\r\n        console.log(ListPriceProd)\r\n        const allPrice = ListPriceProd.reduce(function(sum, current) {\r\n            return sum + current;\r\n        }, 0);\r\n\r\n        this.setState({\r\n            productToWillBuyCount: updataNewList,\r\n            productToWillBuyListName:  ListNameProd,\r\n            productToWillPrice: allPrice\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mainContainer\">d\r\n                <div className=\"products\">\r\n                    {this.state.qty.map(el => {\r\n                        return (\r\n                            <div>\r\n                                <Product\r\n                                    key={el.id}\r\n                                    el={el}\r\n                                    removeElement={this.removeElement}\r\n                                    productToWillBuyCount={this.productToWillBuyCount}\r\n                                    removeElementFromBuy={this.removeElementFromBuy}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n               /* <div className=\"result-container\">\r\n                    <div className=\"result-container-item\">\r\n                        Will Buy: {this.state.productToWillBuyCount.length}\r\n                            <div>\r\n                                <div>{this.state.productToWillBuyListName}</div>\r\n                            </div>\r\n                             <div>All Price: {this.state.productToWillPrice}</div>\r\n                    </div>\r\n                </div>*/\r\n                <div>\r\n                    <ResultCart productToWillBuyCount = {this.productToWillBuyCount}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}